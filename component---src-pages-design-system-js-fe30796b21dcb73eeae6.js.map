{"version":3,"sources":["webpack:///./src/components/layouts/layout.js","webpack:///./src/components/layouts/topbar.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/designSystem/projectHeader.js","webpack:///./src/components/layouts/designSystem/details.js","webpack:///./src/components/layouts/designSystem/issue.js","webpack:///./src/components/molecules/steps/stepCategory.js","webpack:///./src/components/molecules/steps/stepContent.js","webpack:///./src/components/layouts/designSystem/process.js","webpack:///./src/components/layouts/designSystem/recap.js","webpack:///./src/components/layouts/designSystem/outcome.js","webpack:///./src/pages/design-system.js"],"names":["Layout","children","className","Topbar","loadScript","menu","document","getElementById","closeIcon","addEventListener","event","target","HTMLAnchorElement","checked","style","transition","margin","slideUp","to","id","type","htmlFor","onClick","defaultProps","siteTitle","Footer","Date","getFullYear","href","ProjectHeader","data","div","color","fluid","designSystem","childImageSharp","Details","Issue","StepCategory","defaultClassName","title","classnames","renderColor","renderLabel","renderTag","StepContent","tag","modifierCSS","Process","atomicDesign","bemit","sketchLibrary","plant","framer","prototype1","docZinter","docZmdx","codeCSS","codeReact","git","npm","Recap","recapDesign","Outcome","beforeAfter","DesignSystem"],"mappings":"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","file":"component---src-pages-design-system-js-fe30796b21dcb73eeae6.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <div  className=\"l-page\">\n      {children}\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Topbar = ({ children }) => {\n\n  function slideUp() {\n    var menu = document.getElementById('menu');\n    menu.style.transition = \"all 1s  ease-in-out\";\n    menu.style.margin= \"margin: -600px 0 0 0;\";\n  }\n\n  function loadScript() {\n    var menu = document.getElementById('menu');\n    var closeIcon = document.getElementById('menu__toggle');\n    menu.addEventListener('click', handleMenuClick);\n    function handleMenuClick(event) {\n      if (event.target instanceof HTMLAnchorElement) {\n        closeIcon.checked = false;\n        slideUp();\n      }\n    }\n  };\n\n  return (\n    <div className=\"l-topbar\">\n      <div className=\"l-page-wrapper\">\n        <div className=\"g-grid as--stretch as--no-wrap\">\n          <div className=\"g-grid__item as--middle\">\n              <Link className=\"as--light l-topbar__Logo\" to=\"/\">\n                <span className=\"logo\"></span>\n                <h3>Ayout.design</h3>\n              </Link>\n          </div>\n          <div className=\"g-grid__item as--push\">\n            <nav className=\"l-topbar__mobile\">\n              <input id=\"menu__toggle\" type=\"checkbox\" />\n              <label className=\"menu__btn\" htmlFor=\"menu__toggle\">\n                <span></span>\n              </label>\n              <ul className=\"menu__box\" id='menu'>\n                <li>\n                  <Link className=\"menu__item as--light\" to=\"/\" onClick= {loadScript}>Home</Link>\n                </li>\n                <li>\n                  <Link className=\"menu__item as--light\" to=\"/#about\" onClick= {loadScript}>About</Link>\n                </li>\n                <li>\n                  <Link className=\"menu__item as--light\" to=\"/#works\" onClick= {loadScript}>Works</Link>\n                </li>\n              </ul>\n            </nav>\n            <nav className=\"l-topbar__desktop\">\n              <div className=\"l-topbar__desktop__menu\">\n                <div className=\"l-topbar__desktop__menu__item\"><Link className=\"as--light\" to=\"/#about\">About</Link></div>\n                <div className=\"l-topbar__desktop__menu__item\"><Link className=\"as--light\" to=\"/#works\">Works</Link></div>\n              </div>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\nTopbar.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nTopbar.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Topbar","import React from \"react\"\n\nconst Footer = ({ siteTitle }) => (\n  <footer className=\"l-footer\">\n    <div className=\"l-page-wrapper\">\n    Copyright ©  {new Date().getFullYear()} ayout.design\n    <span>Built with\n    <a className=\"as--light\" href=\"https://www.gatsbyjs.org\" target=\"_blank \">Gatsby</a></span>\n      {` `}\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Badge from \"../../atoms/badges\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"react-router-dom\"\n\n\nconst ProjectHeader = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      designSystem: file(relativePath: { eq: \"designSystem/thumbnail-designSystem.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header className=\"l-project-header\">\n      <div className=\"l-page-wrapper\">\n        <div className=\"g-grid as--full as--no-wrap@xs as--middle@xs as--bottom@xxs\"  >\n          <div div className=\"g-grid__item as--1_2@xxs as--3_5@xs as--1_2@sm \">\n              <div className=\"l-project-header__description\">\n                  <h1 id=\"design-system\">React Design System</h1>\n                  <p> Building a <strong>flexible ReactJs and CSS component</strong> library to <strong>standardize UI </strong>and <strong>accelerate</strong> any product <strong>development process</strong>.</p>\n                  <a className=\"as--projectLink\" href=\"https://7-design-system.public.prod.saagie.io/v/latest/\" target=\"_blank \">Visit website</a>\n              </div>\n              <div className=\"g-grid as--no-wrap as--auto as--gutter-xxs\">\n                <div className=\"g-grid__item\">\n                  <Badge color=\"primary\"/>\n                </div>\n                <div className=\"g-grid__item\">\n                  <Badge color=\"ternary\"/>\n                </div>\n                <div className=\"g-grid__item\">\n                  <Badge color=\"secondary\"/>\n                </div>\n              </div>\n          </div>\n          <div className=\"g-grid__item as--1_2@xxs as--2_5@xs as--1_2@sm as--auto \">\n            <div className=\"l-project-header__image\">\n              <div className=\"l-project-header__image-shaper as--shape4\">\n                <Img fluid={data.designSystem.childImageSharp.fluid} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n\n  );\n}\n\n\nProjectHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nProjectHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default ProjectHeader\n","import React from \"react\"\n\nconst Details = () => (\n  <div className=\"l-section as--sm as--dark \">\n    <div className=\"l-page-wrapper\">\n      <div className=\"g-grid as--gutter-xs@xxs as--gutter-sm@xs as--stretch \">\n        <div className=\"g-grid__item  as--1_3@xxs \">\n          <div className=\"m-detail as--shape10\">\n            <h3>Contributors</h3>\n            <ul>\n              <li>- 1 Lead Designer</li>\n              <li>- 1 Product Designer</li>\n              <li>- 1 UX_UI Designer</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"g-grid__item  as--1_3@xxs\">\n          <div className=\"m-detail\">\n            <h3>Team Role</h3>\n            <ul>\n              <li>- Designing UX and UI</li>\n              <li>- Implementing new components in the library</li>\n              <li>- Documenting the library</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"g-grid__item as--1_3@xxs\">\n          <div className=\"m-detail as--shape11\">\n            <h3>Clients</h3>\n            <ul>\n              <li>- Saagie Internal Development Team</li>\n              <li>- Saagie Products Users</li>\n              <li>- External Developers</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Details\n","import React from \"react\"\n\nconst Issue = () => (\n  <div className=\"l-section as--light \">\n    <div className=\"l-page-wrapper\">\n    <h1>Project Background</h1>\n      <div className=\"l-issue\">\n        <p>Saagie is a Bid data software editor who first started business in dispensing hosting services and data managing tools.\n          At a certain point in their growth, the company realized that their customers needed a proper infrastructure to manage\n          their data projects in a more concrete and simple way.\n          In response to their demands, Saagie launched in 2015,\n          their platform called Saagie. The product team needed a solution to unify and move the existing tools onto this unique product.\n        </p>\n        <p> The design team, of which I was a member, was asked to find a scalable design solution that could be quick and easy to implement for the Development team.\n          We opted for a React Design System Library.\n        </p>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Issue\n","import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport React, { Fragment } from 'react';\n\n\n\nconst propTypes = {\n  className: PropTypes.string,\n  defaultClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  color: PropTypes.oneOf(['', 'primary', 'secondary', 'ternary']),\n  title: PropTypes.string,\n};\n\nconst defaultProps = {\n  defaultClassName: 'category',\n  className: '',\n  title:'',\n  color: '',\n};\n\nexport const StepCategory = ({\n  className,\n  defaultClassName,\n  title,\n  color,\n  ...attributes\n}) => {\n  const classes = classnames(\n    defaultClassName,\n    className,\n    title,\n    color,\n  );\n\n\n  const renderColor = () => {\n    switch (color) {\n    case 'primary':\n      return \"as--primary\";\n    case 'secondary':\n      return \"as--secondary\";\n    case 'ternary':\n      return \"as--ternary\";\n    default:\n      return '';\n    }\n  };\n\n  const renderTag = () => {\n    switch (color) {\n    case 'primary':\n      return \"UX_UI\";\n    case 'secondary':\n      return \"Front-end Dev\";\n    case 'ternary':\n      return \"Product Design\";\n    default:\n      return '';\n    }\n  };\n\n  const renderLabel= () => {\n    switch (color) {\n    case 'primary':\n      return \"l-process__label as--primary\";\n    case 'secondary':\n      return \"l-process__label as--secondary\";\n    case 'ternary':\n      return \"l-process__label as--ternary\";\n    default:\n      return '';\n    }\n  };\n\n\n  return (\n    <Fragment>\n      <div className=\"g-grid__item as--pull as--auto\">\n        <div className=\"l-process__signal\" id=\"UX_UI\">\n          <span className={renderColor()}></span>\n        </div>\n      </div>\n      <div className=\"g-grid__item as--middle\">\n        <div className={renderLabel()}>\n          <div className=\"category\" >\n          {renderTag()}\n          </div>\n          <div className=\"step\">\n              {title}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nStepCategory.propTypes = propTypes;\nStepCategory.defaultProps = defaultProps;\n\nexport default StepCategory","import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport React, { Fragment } from 'react';\nimport { modifierCSS } from '../../helpers/index';\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  tag: PropTypes.elementType,\n  className: PropTypes.string,\n  defaultClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  color: PropTypes.oneOf(['', 'primary', 'secondary','ternary']),\n};\n\nconst defaultProps = {\n  tag: 'div',\n  className: '',\n  defaultClassName: '',\n  color:'primary',\n};\n\nexport const StepContent = ({\n  children,\n  tag: Tag,\n  defaultClassName,\n  className,\n  color,\n  ...attributes\n}) => {\n  const classes = classnames(\n    defaultClassName,\n    className,\n    modifierCSS(color),\n  );\n\n  const renderColor = () => {\n    switch (color) {\n    case 'primary':\n      return \"as--primary\";\n    case 'secondary':\n      return \"as--secondary\";\n    case 'ternary':\n      return \"as--ternary\";\n    default:\n      return '';\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"g-grid__item as--pull as--auto\">\n        <div className=\"l-process__line\">\n          <span className={renderColor()}></span>\n        </div>\n      </div>\n      <div className=\"g-grid__item\">\n        <div className=\"l-process__content\">\n          {children}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nStepContent.propTypes = propTypes;\nStepContent.defaultProps = defaultProps;\n\nexport default StepContent","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport {StepCategory} from \"../../molecules/steps/stepCategory\"\nimport {StepContent} from \"../../molecules/steps/stepContent\"\n\n\nconst Process = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      designSystem: file(relativePath: { eq: \"designSystem/thumbnail-designSystem.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      framer: file(relativePath: { eq: \"designSystem/framer.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      git: file(relativePath: { eq: \"designSystem/git.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      plant: file(relativePath: { eq: \"designSystem/plant.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      prototype1: file(relativePath: { eq: \"designSystem/prototype.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      npm: file(relativePath: { eq: \"designSystem/npm.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      sketchLibrary: file(relativePath: { eq: \"designSystem/sketchLib.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      atomicDesign: file(relativePath: { eq: \"designSystem/atomicDesign.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      bemit: file(relativePath: { eq: \"designSystem/bemit.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      docZinter: file(relativePath: { eq: \"designSystem/docZ-inter.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      docZmdx: file(relativePath: { eq: \"designSystem/docZ-mdx.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      codeReact: file(relativePath: { eq: \"designSystem/code-react.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      codeCSS: file(relativePath: { eq: \"designSystem/code-CSS.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n\n  return (\n  <div className=\"l-section as--light\">\n    <div className=\"l-page-wrapper\">\n      <h1>Process</h1>\n\n      <div className=\"l-process\" id=\"UI_UX\">\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepCategory color=\"primary\" title=\"Step 1: Designing a UI language\"/>\n        </div>\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepContent color=\"primary\">\n            <h2>Naming Convention</h2>\n            <p>Given the project scale and its impacts on each tool's interface,\n               our team decided to set up a naming convention to\n              classify and trace our UI components throughout their complete life cycle, from the design stage to production.</p>\n               <p>We needed this convention to fit the product and be universal enough to be clearly understood by each product team member.\n               After discussion with the development team, we agreed on a language that would combine the best of both worlds: the <a href=\"https://bradfrost.com/blog/post/atomic-web-design/\" target=\"_blank \">Atomic Design </a>\n                approach and the clarity of the <a href=\"https://www.jamesturneronline.net/blog/bemit-naming-convention.html\" target=\"_blank \">BEMIT</a> architecture.\n            </p>\n            <p> We settled on applying this naming convention from Sketch layers to testing,\n              not forgetting code writing.</p>\n\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.atomicDesign.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\">Atomic Design organizational structure used for each UI component</div>\n              </div>\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.bemit.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\">New naming convention applied for each UI component when coding</div>\n              </div>\n            </div>\n          </StepContent>\n        </div>\n      </div>\n      <div className=\"l-process\">\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepCategory color=\"primary\" title=\"Step 2: Creating a collaborative UI component library \"/>\n        </div>\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepContent color=\"primary\">\n            <h2>Design System and collaborative tools</h2>\n            <p> At the beginning of the project, our team only consisted of 3 designers who worked independently on different product features. In a concern of visual\n              consistency between the various screen elements, we set up a shared <a href=\"https://www.sketch.com/docs/libraries/\" target=\"_blank \">Sketch Library </a>\n              to centralize, unify, and synchronize each of our UI components.\n              We organized our component library in accordance with our naming convention: a folder per Atomic Design structure and a page per UI component (including its possible variants).\n            </p>\n            <p>\n              Using a consistent and exhaustive UI Library considerably helped us spend less\n              time figuring out the visual aspects of new complex component layouts (their\n              smaller units being already defined upstream). We were, therefore, able\n              to focus more on better usability and delightful experiences for our users.\n            </p>\n            <p>Then, we used <a className=\"as--projectLink\" href=\"https://plantapp.io/\" target=\"_blank \">Plant </a>\n            plugin, a version control app, and Sketch plugin for designers to secure and track our library's entire version history.\n            This plugin helped us to keep our respective prototypes automatically updated with the latest version of each component.\n            </p>\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.sketchLibrary.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\">Saagie Sketch library</div>\n              </div>\n            </div>\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.plant.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\">Sharing element artboards via Plant: the team sync changes between each other.</div>\n              </div>\n            </div>\n          </StepContent>\n        </div>\n      </div>\n\n      <div className=\"l-process\">\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepCategory color=\"ternary\" title=\"Step 3: Building product prototypes\"/>\n        </div>\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepContent color=\"ternary\">\n          <h2>Testing and sharing the product vision</h2>\n            <p>Our synchronized UI component library speeded up our design process.\n              Besides this, it enabled us to easily create and iterate high fidelity prototypes that we could use for multiple purposes:</p>\n              <ul>\n                <li><p>1. To validate our user flows and improve our interaction design on different devices using\n              <a href=\"https://www.framer.com/\" target=\"_blank\"> Framer</a>, a design and prototyping tool.</p>\n              </li>\n                <li><p>2. To clarify and explain UI component behaviors and transitions to the product team members.\n                  A link to the prototype attached to each product story showing itself to be more effective than a long list of UI_UX acceptance criteria.</p>\n                </li>\n                <li><p>3. To communicate, align, and collect feedbacks before production or release by providing both the product and the sales teams with the same clear,\n                        up-to-date, and accurate representation of the new interfaces.</p></li>\n                <li><p>4. To keep all the stakeholders updated on the future versions of the product.</p></li>\n              </ul>\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.framer.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\">Component interaction testing with Framer</div>\n              </div>\n              <div className=\"g-grid__item as--2_3@sm \">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.prototype1.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\">Sketch Interactive Prototyping</div>\n              </div>\n            </div>\n          </StepContent>\n        </div>\n      </div>\n\n      <div className=\"l-process\">\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepCategory color=\"secondary\" title=\"Step 4: Publishing a live React Design System Library\"/>\n        </div>\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepContent color=\"secondary\">\n            <h2>Documentation Engine</h2>\n            <p>Since we needed to find a simple and effective solution to deploy to production,\n              we decided to lessen the development team's workload by transcribing our Sketch design system\n              into a ReactJS front-end library. </p>\n              <p>We aimed to build a live component library\n              where end-users would only have to copy and paste the code they need without worrying about the CSS or HTML part.</p>\n              <p>We naturally looked to <a className=\"as--projectLink\" href=\"https://www.docz.site/\" target=\"_blank\"> DocZ</a>, a zero-configuration documentation engine,\n              to publish our documentation using markdown and javascript only.\n              We tried to explicit the context and use of each component as much as possible. This \"sandbox\" process revealed itself to be very useful when validating our visual grammar's coherence.\n              It also helped us in identifying and fixing defective components.\n              </p>\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture \">\n                  <Img fluid={data.docZinter.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\">DocZ: Form Password Component documentation (User view)</div>\n              </div>\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.docZmdx.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\"> DocZ: Form Password Component documentation (Markdown file) </div>\n              </div>\n            </div>\n          </StepContent>\n        </div>\n      </div>\n\n\n      <div className=\"l-process\">\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepCategory color=\"secondary\" title=\"Step 5: Implementing the Components\"/>\n        </div>\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepContent color=\"secondary\">\n            <h2> Code</h2>\n              <p> To extend our design system portability and make it reusable and compatible with any other digital side projects,\n                we decided to provide a \"CSS Only\" code alternative for each ReactJS element.</p>\n              <p>Luckily, each of Saagie's design team members possessed HTML, CSS, and ReactJs coding skills.\n                We, therefore, started the code implementation while ensuring its compliance with our naming convention.\n                 This extra mile allowed us to cut down on design and rework time and facilitated communication with the development team.\n              </p>\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.codeCSS.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\"> Form Password: Component Styling on DocZ</div>\n              </div>\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.codeReact.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\"> Form Password: React Component on Docz</div>\n              </div>\n            </div>\n          </StepContent>\n        </div>\n      </div>\n\n      <div className=\"l-process\">\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepCategory color=\"secondary\" title=\"Step 6: Sharing and Deploying\"/>\n        </div>\n        <div className=\"g-grid as--no-wrap as--gutter-none as--stretch\">\n          <StepContent color=\"secondary\">\n            <h2> Git</h2>\n            <p> We used <a className=\"as--projectLink\" href=\"https://en.wikipedia.org/wiki/Git\" target=\"_blank\"> Git</a> to store and version our design system progression. Also, we applied the same Git Workflow as the development team to maintain consistency in product management.</p>\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.git.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\"> Git activities on Sourcetree</div>\n              </div>\n            </div>\n            <h2>NPM Repository</h2>\n            <p>For developers to consume our library transparently, we stored our ReactJS design system on a dedicated <a className=\"as--projectLink\" href=\"https://www.npmjs.com/package/saagie-ui?activeTab=readme\" target=\"_blank\"> NPM </a>repository freely accessible by the command line. This process allowed us to control the version number used while keeping our users informed about any breaking change or potential depreciated element issue.</p>\n            <div className=\"g-grid h-pt-lg \">\n              <div className=\"g-grid__item as--2_3@sm\">\n                <div className=\"l-process__picture\">\n                  <Img fluid={data.npm.childImageSharp.fluid} />\n                </div>\n                <div className=\"caption\"> Saagie Design System NPM Repository</div>\n              </div>\n            </div>\n          </StepContent>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nProcess.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Process\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n\n\nconst Recap = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      recapDesign: file(relativePath: { eq: \"designSystem/recap.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n  <div className=\"l-section as--light\" id=\"about\">\n    <div className=\"l-page-wrapper\">\n      <h1>Process architecture</h1>\n      <div className=\"g-grid\">\n        <div className=\"g-grid__item \">\n          <div className=\"l-outcome__picture\">\n            <Img fluid={data.recapDesign.childImageSharp.fluid} />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nRecap.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Recap\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n\n\nconst Outcome = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      recapDesign: file(relativePath: { eq: \"designSystem/recap.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      beforeAfter: file(relativePath: { eq: \"designSystem/beforeAfter.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n  <div className=\"l-section as--light\" id=\"about\">\n    <div className=\"l-page-wrapper\">\n    <h1>Outcome</h1>\n      <div className=\"g-grid as--full as--gutter-xl@md as--stretch@xs\">\n        <div className=\"g-grid__item \">\n            <div className=\"l-outcome\">\n              <h2>Main Tools interfaces unified in a few months.</h2>\n              <p>Agreeing on common language with the development team played an essential role in the React Design System success.\n                Developers provided us with their needs and feedback, but they also significantly contributed to the project.\n                They factorized repetitive components formerly unevenly implemented in the different screens and added them\n                in the library so any team member could use them in the future.\n              </p>\n              <p>On the top of speeding up the product releases, involving stakeholders\n                from the beginning made cross-team communication flow better and federated\n                the all product team.</p>\n              <div className=\"l-outcome__picture\">\n                <Img fluid={data.beforeAfter.childImageSharp.fluid} />\n              </div>\n            </div>\n            <div className=\"l-outcome\">\n              <h2>A scalable solution reused in many occasions.</h2>\n              <p>Thanks to its versatility, the design system allowed us\n                to quickly customize and repurpose our components when designing\n                PoC interfaces for pre-sales team's prospects.\n              </p>\n              <p>\n                It also helped Saagie's contractors and marketing team to maintain\n                the brand identity consistency on various side projects (such as company website,\n                landing pages, flyers, etc.)\n              </p>\n            </div>\n            <div className=\"l-outcome\">\n              <h2>Positive feedbacks from our clients</h2>\n              <p> Our project received positive feedback from various departments.</p>\n               <p>First, the development team appreciated how this library significantly enhanced their productivity.\n                  It made product developing and testing way faster and improved its quality,\n                   consistency, and accessibility. Reusing established components helped the team save hours\n                   and days on repetitive coding and enabled them to focus on solving more critical functioning problems.\n              </p>\n\n                <p>In addition to this, being able to accelerate our product prototype iteration pace significantly\n                  impacted both the sales and marketing teams. Their recurrent feedback not only helped the design team to challenge\n                  and adjust our interfaces but also contributed to improving cross-services alignment.\n                  The prototype release reviews were the perfect occasion for the various teams to learn from each other's experiences\n                  and provide a clearer understanding of how and why things were done.\n                  The sales and the marketing team, as a result, were regularly kept informed of the product improvements,\n                   and therefore were able to adapt their pitch and update their clients accordingly.</p>\n\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutcome.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Outcome\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layouts/layout\"\nimport SEO from \"../components/helpers/seo\"\nimport Topbar from \"../components/layouts/topbar\"\nimport Footer from \"../components/layouts/footer\"\nimport ProjectHeader from \"../components/layouts/designSystem/projectHeader\"\nimport Details from \"../components/layouts/designSystem/details\"\nimport Issue from \"../components/layouts/designSystem/issue\"\nimport Process from \"../components/layouts/designSystem/process\"\nimport Recap from \"../components/layouts/designSystem/recap\"\nimport Outcome from \"../components/layouts/designSystem/outcome\"\nimport \"../scss/global.scss\"\n\nconst DesignSystem = () => (\n  <Layout>\n    <SEO title=\"Design System\" />\n    <Topbar />\n    <ProjectHeader/>\n    <Details/>\n    <Issue/>\n    <Process/>\n    <Recap/>\n    <Outcome/>\n    <Footer/>\n  </Layout>\n)\n\nexport default DesignSystem\n"],"sourceRoot":""}